{
	"info": {
		"_postman_id": "0f5093f5-6925-4393-a7cf-69d43a98dc2c",
		"name": "API Allovoisins",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4737023"
	},
	"item": [
		{
			"name": "List users",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/back/users?limit=10&offset=0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"back",
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": "10"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				},
				"description": "\n# Get Users\n\nThis endpoint retrieves a list of users with the option to limit the number of results and specify the offset for pagination.\n\n## Request Parameters\n- `limit` (integer, optional): Specifies the maximum number of users to be returned. Default is 10.\n- `offset` (integer, optional): Specifies the offset for pagination. Default is 0.\n\n## Response\nThe response will include a list of user objects based on the provided parameters.\n\n"
			},
			"response": []
		},
		{
			"name": "Add user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"123456789\",\n    \"street_address\": \"123 Main St\",\n    \"street_number\": \"123\",\n    \"city\": \"Springfield\",\n    \"state\": \"IL\",\n    \"postal_code\": \"62701\",\n    \"country\": \"USA\",\n    \"job_status\": \"Employed\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/front/users/add",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"front",
						"users",
						"add"
					]
				},
				"description": "### Add User\n\nThis endpoint allows you to add a new user to the system.\n\n#### Request Body\n\n- `first_name` (string, mandatory): The first name of the user.\n- `last_name` (string, mandatory): The last name of the user.\n- `email` (string, mandatory): The email address of the user.\n- `phone` (string, mandatory): The phone number of the user.\n- `street_address` (string, mandatory): The street address of the user.\n- `street_number` (string, mandatory): The street number of the user.\n- `city` (string, mandatory): The city of the user.\n- `state` (string, optional): The state of the user.\n- `postal_code` (string, mandatory): The postal code of the user.\n- `country` (string, mandatory): The country of the user.\n- `job_status` (string, optional): The job status of the user.\n    \n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"status\": \"OK\",\n  \"result\": \"User created.\"\n}\n\n ```\n\n#### Error\n\nThe response for this request if there is an error is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"status\": \"error\",\n  \"message\": \"The *Postal code* field is required.\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Update user (Front)",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"job_status\": \"Your new job status\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/front/users/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"front",
						"users",
						"1"
					]
				},
				"description": "# Update User Job Status\n\nThis endpoint is used to update a field of a specific user.\n\n## Request\n\n### Request Body\n\n- `the_field` (string): The new value of the field\n    \n\n## Response\n\nThe response of this request is a JSON object with the following schema:\n\n``` json\n{\n    \"status\": \"OK\",\n    \"result\": \"User updated.\"\n}\n\n ```\n\n#### Error\n\nThe response for this request if there is an error is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"status\": \"error\",\n  \"message\": \"The Job status field cannot exceed 100 characters in length.\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Update user (Back)",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"job_status\": \"Your new job status\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/back/users/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"back",
						"users",
						"1"
					]
				},
				"description": "# Update User\n\nThis endpoint is used to update a field of a specific user.\n\n## Request\n\n### Request Body\n\n- `the_field` (string): The new value of the field\n    \n\n## Response\n\nThe response of this request is a JSON object with the following schema:\n\n``` json\n{\n    \"status\": \"OK\",\n    \"result\": \"User updated.\"\n}\n\n ```\n\n#### Error\n\nThe response for this request if there is an error is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"status\": \"error\",\n  \"message\": \"The Job status field cannot exceed 100 characters in length.\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Delete user",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/back/users/0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"back",
						"users",
						"0"
					]
				},
				"description": "### Delete User\n\nDeletes a specific user from the system.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"status\": \"OK\",\n  \"result\": \"User deleted.\"\n}\n\n ```\n\n#### Error\n\nThe response for this request if there is an error is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"status\": \"error\",\n  \"message\": \"Not existing user.\"\n}\n\n ```"
			},
			"response": []
		}
	]
}